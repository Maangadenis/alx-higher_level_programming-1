>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Check if div is int or float
>>> matrix = [[1,2,3]]
>>> div = "lol"
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
        ...
TypeError: div must be a number
>>> div = None
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
        ...
TypeError: div must be a number

Check if div is 0
>>> matrix = [[1, 2, 3]]
>>> div = 0
>>> matrix_divided(matrix, div)
Traceback (most recent call last):
        ...
ZeroDivisionError: division by zero

Check for empty list.
>>> matrix = []
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
        ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Check for list with one list.
>>> matrix = [[1,2,3]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0]]

Check for list with two lists
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Check for list with lists of different length
>>> matrix = [[1, 2, 3, 4], [5, 6, 7]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
        ...
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1, 2, 3], [4, 5, 6, 7]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
        ...
TypeError: Each row of the matrix must have the same size

Check for list with wrong elements
>>> matrix = [[1, "lol", 2], [3, 5, 6]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
        ...
TypeError: matrix must be a matrix (list of lists) of integers/floats
